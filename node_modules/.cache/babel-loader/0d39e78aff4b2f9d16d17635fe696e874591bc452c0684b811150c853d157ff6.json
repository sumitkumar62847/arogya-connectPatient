{"ast":null,"code":"/**\n * @license lucide v0.542.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport defaultAttributes from './defaultAttributes.js';\nconst createSVGElement = ([tag, attrs, children]) => {\n  const element = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n  Object.keys(attrs).forEach(name => {\n    element.setAttribute(name, String(attrs[name]));\n  });\n  if (children?.length) {\n    children.forEach(child => {\n      const childElement = createSVGElement(child);\n      element.appendChild(childElement);\n    });\n  }\n  return element;\n};\nconst createElement = (iconNode, customAttrs = {}) => {\n  const tag = \"svg\";\n  const attrs = {\n    ...defaultAttributes,\n    ...customAttrs\n  };\n  return createSVGElement([tag, attrs, iconNode]);\n};\nexport { createElement as default };","map":{"version":3,"names":["createSVGElement","tag","attrs","children","element","document","createElementNS","Object","keys","forEach","name","setAttribute","String","length","child","childElement","appendChild","createElement","iconNode","customAttrs","defaultAttributes"],"sources":["/Users/sumitkumar/Desktop/Arogya/Frontend/arogyaPatient/node_modules/lucide/src/createElement.ts"],"sourcesContent":["import defaultAttributes from './defaultAttributes';\nimport { IconNode, SVGProps } from './types';\n\ntype CreateSVGElementParams = [tag: string, attrs: SVGProps, children?: IconNode];\n\n/**\n * Creates a new SVGElement\n * @param {string} tag - Tag name of the element\n * @param {object} attrs - Attributes of the element\n * @param {array} children - Children of the element\n * @returns {SVGElement}\n */\nconst createSVGElement = ([tag, attrs, children]: CreateSVGElementParams) => {\n  const element = document.createElementNS('http://www.w3.org/2000/svg', tag);\n\n  Object.keys(attrs).forEach((name) => {\n    element.setAttribute(name, String(attrs[name]));\n  });\n\n  if (children?.length) {\n    children.forEach((child) => {\n      const childElement = createSVGElement(child);\n\n      element.appendChild(childElement);\n    });\n  }\n\n  return element;\n};\n\n/**\n * Creates a new HTMLElement from icon node\n * @param {array} iconNode - Icon node to be converted to an element\n * @param {object} customAttrs - Custom attributes to be added to the element\n * @returns {HTMLElement}\n */\nconst createElement = (iconNode: IconNode, customAttrs: SVGProps = {}) => {\n  const tag = 'svg';\n  const attrs = {\n    ...defaultAttributes,\n    ...customAttrs,\n  };\n\n  return createSVGElement([tag, attrs, iconNode]);\n};\n\nexport default createElement;\n"],"mappings":";;;;;;;;AAYA,MAAMA,gBAAA,GAAmBA,CAAC,CAACC,GAAA,EAAKC,KAAA,EAAOC,QAAQ,MAA8B;EAC3E,MAAMC,OAAA,GAAUC,QAAA,CAASC,eAAA,CAAgB,8BAA8BL,GAAG;EAE1EM,MAAA,CAAOC,IAAA,CAAKN,KAAK,EAAEO,OAAA,CAASC,IAAA,IAAS;IACnCN,OAAA,CAAQO,YAAA,CAAaD,IAAA,EAAME,MAAA,CAAOV,KAAA,CAAMQ,IAAI,CAAC,CAAC;EAChD,CAAC;EAED,IAAIP,QAAA,EAAUU,MAAA,EAAQ;IACpBV,QAAA,CAASM,OAAA,CAASK,KAAA,IAAU;MAC1B,MAAMC,YAAA,GAAef,gBAAA,CAAiBc,KAAK;MAE3CV,OAAA,CAAQY,WAAA,CAAYD,YAAY;IAClC,CAAC;EACH;EAEA,OAAOX,OAAA;AACT;AAQA,MAAMa,aAAA,GAAgBA,CAACC,QAAA,EAAoBC,WAAA,GAAwB,EAAC,KAAM;EACxE,MAAMlB,GAAA,GAAM;EACZ,MAAMC,KAAA,GAAQ;IACZ,GAAGkB,iBAAA;IACH,GAAGD;EAAA,CACL;EAEA,OAAOnB,gBAAA,CAAiB,CAACC,GAAA,EAAKC,KAAA,EAAOgB,QAAQ,CAAC;AAChD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}